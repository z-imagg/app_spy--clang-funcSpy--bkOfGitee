// 对任意两个不同输入  本asm模板生成的asm必须满足： 该asm编译出的机器指令序列 标记指令(前2条指令)内容必须完全相同, 否则bochs无法识别出本asm块
// 又由于 第1条jmp指令跳转到本块末尾 即 第1条jmp指令的操作数是 本块的字节数，因此 有 要求 本块所占字节数 必须小于 255,否则 第1条指令 变长（其 操作数无法再用1字节容纳）.
__asm__  __volatile__ (
"jmp 0f \n\t"      // 0f : "0 forward" : 向前(下)跳转到标号0  参考xv6中文件kinit1_func_id__local_label__demo.png
"or $0xFFFFFFFF,%%edi \n\t" // 【3字节】；前2条指令 为 本asm块的 标记 指令 ，bochs 凭借 前2条指令 识别出 本asm块。
"or ${},%%edi \n\t" // 【or,6字节,1025+】；函数id (服务SrcFileFuncIdGenService生成的 函数id，从1025开始)
" #_type# " //【or,6字节,1025+】； 余下指令所表示的含义
" #instrFnAddr_inOperand_1st# "  //【nop|or,6字节,1025+】； 本指令的 操作数 容纳 "函数地址"(函数地址相对此指令地址的偏移量)
"0: \n\t"          // 标号0 即 本块末尾 即 本块紧挨着的原有的c代码
":  "     // 无 输出操作数(output operands)
": #inOperand_1FmtPlace#  " // 【注释|函数地址】；输入操作数(input  operands)
 // 无 list of clobbered registers
); /* {} non_static_non_inline_func*/
TranslationUnitDecl 0x559e6b4792d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559e6b479b40 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559e6b4798a0 '__int128'
|-TypedefDecl 0x559e6b479bb0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559e6b4798c0 'unsigned __int128'
|-TypedefDecl 0x559e6b479f28 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x559e6b479ca0 '__NSConstantString_tag'
|   `-CXXRecord 0x559e6b479c08 '__NSConstantString_tag'
|-TypedefDecl 0x559e6b479fc0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559e6b479f80 'char *'
|   `-BuiltinType 0x559e6b479380 'char'
|-TypedefDecl 0x559e6b4bf248 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag[1]'
| `-ConstantArrayType 0x559e6b4bf1f0 '__va_list_tag[1]' 1 
|   `-RecordType 0x559e6b47a0b0 '__va_list_tag'
|     `-CXXRecord 0x559e6b47a018 '__va_list_tag'
|-NamespaceDecl 0x559e6b4bf2a0 </pubx/clang-ctk/t_clock_tick/test_main.cpp:2:1, line:18:1> line:2:11 myNs1
| `-NamespaceDecl 0x559e6b4bf310 <line:3:1, line:16:1> line:3:11 myNs2
|   `-CXXRecordDecl 0x559e6b4bf380 <line:5:1, line:14:1> line:5:8 struct User definition
|     |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|     | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|     | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|     | |-MoveConstructor exists simple trivial needs_implicit
|     | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
|     | |-MoveAssignment exists simple trivial needs_implicit
|     | `-Destructor simple irrelevant trivial needs_implicit
|     |-CXXRecordDecl 0x559e6b4bf498 <col:1, col:8> col:8 implicit struct User
|     |-CXXMethodDecl 0x559e6b4bf5b0 <line:6:1, line:8:1> line:6:5 used f111 'int ()' implicit-inline
|     | `-CompoundStmt 0x559e6b4bf828 <col:11, line:8:1>
|     |   `-ReturnStmt 0x559e6b4bf818 <line:7:1, col:8>
|     |     `-IntegerLiteral 0x559e6b4bf7f8 <col:8> 'int' 11
|     |-CXXMethodDecl 0x559e6b4bf678 <line:9:1, line:11:1> line:9:5 f222 'int ()' implicit-inline
|     | `-CompoundStmt 0x559e6b4bf970 <col:11, line:11:1>
|     |   `-ReturnStmt 0x559e6b4bf960 <line:10:1, col:14>
|     |     `-CXXMemberCallExpr 0x559e6b4bf880 <col:9, col:14> 'int'
|     |       `-MemberExpr 0x559e6b4bf850 <col:9> '<bound member function type>' ->f111 0x559e6b4bf5b0
|     |         `-CXXThisExpr 0x559e6b4bf840 <col:9> 'myNs1::myNs2::User *' implicit this
|     `-CXXMethodDecl 0x559e6b4bf740 <line:13:1, col:16> col:5 funOutImpl 'int ()'
`-CXXMethodDecl 0x559e6b4bfa00 parent 0x559e6b4bf380 prev 0x559e6b4bf740 <line:20:1, line:24:1> line:20:25 funOutImpl 'int ()'
  `-CompoundStmt 0x559e6b4bfc28 <col:38, line:24:1>
    |-DeclStmt 0x559e6b4bfb78 <line:21:3, col:10>
    | `-VarDecl 0x559e6b4bfb10 <col:3, col:8> col:8 used ch 'char'
    |-UnaryOperator 0x559e6b4bfbb0 <line:22:3, col:5> 'char' postfix '++' cannot overflow
    | `-DeclRefExpr 0x559e6b4bfb90 <col:3> 'char' lvalue Var 0x559e6b4bfb10 'ch' 'char'
    `-ReturnStmt 0x559e6b4bfc18 <line:23:3, col:10>
      `-ImplicitCastExpr 0x559e6b4bfc00 <col:10> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x559e6b4bfbe8 <col:10> 'char' <LValueToRValue>
          `-DeclRefExpr 0x559e6b4bfbc8 <col:10> 'char' lvalue Var 0x559e6b4bfb10 'ch' 'char'
